import java.util.ArrayList;

public class LRUcache
{
  ArrayList<LRUnode> list = null;
  int capacity;
 
  public LRUcache(int capacity) 
  {
    this.list = new ArrayList<>();
    this.capacity = capacity;
  }
  public int getResponse(String key)
  {
    for(int i=0;i<list.size();i++)
    {
      if(list.get(i).key.equals(key))
      {
        LRUnode tmp = list.get(i);
        list.remove(list.get(i));
        //make head
        list.add(0, tmp);
        return list.get(i).value;
      }
    }
    return Integer.MAX_VALUE;
  }
  public void addLRUnode(String key, int val)
  {
    boolean trigger = false;
    for(int i=0;i<list.size();i++)
    {
      if(list.get(i).key.equals(key))
      {
        trigger=true;
        LRUnode tmp = list.get(i);
        list.remove(list.get(i));
        //make head
        list.add(0, tmp);
      }
    }
    if(!trigger)
    {
      if(list.size()>=this.capacity)
      {
        list.remove(this.capacity-1);
      }
    }
    
  }

}